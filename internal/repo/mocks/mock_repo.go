// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/scipie28/test/internal/repo (interfaces: Repo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/scipie28/note-service-api/internal/app/model"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockRepo) AddNtoe(arg0 api.Note) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNtoe", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockRepoMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNtoe", reflect.TypeOf((*MockRepo)(nil).AddNtoe), arg0)
}

// Describe mocks base method.
func (m *MockRepo) DescribeNote(arg0 int64) (api.Note, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNote", arg0)
	ret0, _ := ret[0].(api.Note)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Describe indicates an expected call of Describe.
func (mr *MockRepoMockRecorder) Describe(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNote", reflect.TypeOf((*MockRepo)(nil).DescribeNote), arg0)
}

// MultiAdd mocks base method.
func (m *MockRepo) MultiAddNotes(arg0 []api.Note) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MultiAddNotes", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MultiAdd indicates an expected call of MultiAdd.
func (mr *MockRepoMockRecorder) MultiAdd(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MultiAddNotes", reflect.TypeOf((*MockRepo)(nil).MultiAddNotes), arg0)
}

// Remove mocks base method.
func (m *MockRepo) RemoveNote(arg0 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveNote", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockRepoMockRecorder) Remove(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveNote", reflect.TypeOf((*MockRepo)(nil).RemoveNote), arg0)
}

// Update mocks base method.
func (m *MockRepo) UpdateNote(arg0 int64, arg1 api.Note) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNote", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockRepoMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNote", reflect.TypeOf((*MockRepo)(nil).UpdateNote), arg0, arg1)
}
